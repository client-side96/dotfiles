[language-server.denols]
command = "deno"
args = ["lsp"]
config = { "provideFormatter" = true }

# Snippets language server
[language-server.scls]
command = "simple-completion-language-server"

[language-server.scls.config]
max_completion_items = 20    # set max completion results len for each group: words, snippets, unicode-input
snippets_first = true        # completions will return before snippets by default
feature_words = true         # enable completion by word
feature_snippets = true      # enable snippets
feature_unicode_input = true # enable "unicode input"
feature_paths = true         # enable path completion


# write logs to /tmp/completion.log
[language-server.scls.environment]
RUST_LOG = "info,simple-completion-language-server=info"
LOG_FILE = "/tmp/completion.log"

[language-server.omnisharp]
command = "OmniSharp"
args = ["-lsp"]
timeout = 30

[[language]]
name = "toml"
formatter = { command = 'taplo', args = ["format", "-"] }
auto-format = true

[[language]]
name = "html"
formatter = { command = 'prettier', args = ["--parser", "html"] }
language-servers = ["vscode-html-language-server", "tailwindcss-ls"]
auto-format = false

[[language]]
name = "json"
formatter = { command = 'prettier' }
auto-format = false


[[language]]
name = "css"
formatter = { command = 'prettier', args = ["--parser", "css"] }
language-servers = ["vscode-css-language-server", "tailwindcss-ls"]
auto-format = true

[[language]]
name = "javascript"
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true
language-servers = [
  { name = "scls", only-features = [
    "completion",
  ] },
  "typescript-language-server",
  "vscode-eslint-language-server",
]

[[language]]
name = "typescript"
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true
language-servers = [
  { name = "scls", only-features = [
    "completion",
  ] },
  "typescript-language-server",
  "vscode-eslint-language-server",
]

[[language]]
name = "tsx"
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true
language-servers = [
  "typescript-language-server",
  { name = "scls" },
  "tailwindcss-ls",
  "vscode-eslint-language-server",
]


[[language]]
name = "haskell"
formatter = { command = 'stylish-haskell' }
auto-format = false

[[language]]
name = "go"
auto-format = true

[[language]]
name = "c-sharp"
scope = "source.cs"
injection-regex = "c-?sharp"
roots = ["sln", "csproj"]
file-types = ["cs"]
comment-token = "//"
indent = { tab-width = 4, unit = "    " }
language-servers = ["omnisharp"]

[language-server.pylsp.config.pylsp]
plugins.pylint.enabled = true
plugins.black.enabled = true
plugins.pycodestyle.maxLineLength = 100
plugins.mccabe.threshold = 20

[[language]]
name = "python"
auto-format = true

[[language]]
name = "dart"
auto-format = true
language-servers = [{ name = "scls", only-features = ["completion"] }, "dart"]
